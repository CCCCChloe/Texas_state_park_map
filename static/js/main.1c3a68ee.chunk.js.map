{"version":3,"sources":["mapStyle.js","App.js","serviceWorker.js","index.js"],"names":["mapStyle","featureType","elementType","stylers","visibility","color","weight","saturation","lightness","gamma","hue","WrappedMap","withScriptjs","withGoogleMap","_useState","useState","_useState2","Object","slicedToArray","selectedPark","setSelectedPark","today","Date","getDay","react_default","a","createElement","lib","defaultZoom","defaultCenter","lat","lng","defaultOptions","styles","onClick","parksData","map","park","key","Park_ID","position","Latitude","Longitude","icon","url","scaledSize","window","google","maps","Size","onCloseClick","Name","alt","src","style","height","display","top","paddingLeft","Address","margin","marginLeft","backgroundColor","borderBottom","Time","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","App","width","googleMapURL","loadingElement","containerElement","mapElement","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c3a68ee.chunk.js","sourcesContent":["export default [\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#8e8e8e\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#7f7f7f\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.country\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#bebebe\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.province\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#cbcbcb\"\n            },\n            {\n                \"weight\": \"0.69\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.locality\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"saturation\": \"0\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.attraction\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"saturation\": \"0\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.attraction\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.business\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.government\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.medical\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#98da9f\"\n            },\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.place_of_worship\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.school\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.sports_complex\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.sports_complex\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.sports_complex\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"saturation\": \"-100\"\n            },\n            {\n                \"lightness\": \"50\"\n            },\n            {\n                \"gamma\": \"1\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#e4e4e4\"\n            },\n            {\n                \"saturation\": \"0\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            },\n            {\n                \"saturation\": \"0\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            },\n            {\n                \"saturation\": \"0\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"saturation\": \"0\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#e4e4e4\"\n            },\n            {\n                \"lightness\": \"0\"\n            },\n            {\n                \"gamma\": \"1\"\n            },\n            {\n                \"saturation\": \"0\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"hue\": \"#ff0000\"\n            },\n            {\n                \"saturation\": \"-100\"\n            },\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#cbcbcb\"\n            },\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#f3f3f3\"\n            },\n            {\n                \"saturation\": \"0\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    }\n]\n","import React, { useState } from 'react';\nimport { \n  GoogleMap, \n  withScriptjs, \n  withGoogleMap, \n  Marker, \n  InfoWindow \n} from 'react-google-maps';\nimport parksData from './data/data.json';\nimport mapStyle from './mapStyle';\n\nfunction Map() {\n  const [selectedPark, setSelectedPark] = useState(null);\n  var currentday = new Date();\n  var week = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var today = week[currentday.getDay()];\n\n  return (\n    <GoogleMap \n      defaultZoom={7} \n      defaultCenter={{ lat: 30.268427, lng: -97.727013 }} \n      defaultOptions={{ styles: mapStyle }}\n      onClick={() => {setSelectedPark(null);}}\n    >\n      {parksData.map(park => (\n        <Marker \n          key={park.Park_ID} \n          position={{ lat: park.Latitude, lng: park.Longitude }}\n          onClick = {() => { setSelectedPark(park); }} \n          icon = {{\n            url: \"./icon.png\",\n            scaledSize: new window.google.maps.Size(25, 33),\n          }}\n        />\n      ))}\n\n      {selectedPark && (\n        <InfoWindow \n          position={{ lat: selectedPark.Latitude, lng: selectedPark.Longitude }} \n          onCloseClick={() => {setSelectedPark(null);}}\n        >\n          <div>\n            <h2>{ selectedPark.Name }</h2>\n            <div>\n              <img \n                alt='address icon'\n                src='./addressIcon.png' \n                style={{ height: '24px', display: 'inline', position: 'relative', top: '5px' }} \n              />\n              <p \n                style={{ \n                  display: 'inline', \n                  paddingLeft: '10px', \n                  }}\n              >\n                { selectedPark.Address }\n              </p>\n            </div>\n            \n            <div >\n              <img \n                alt='time icon'\n                src='./timeIcon.png' \n                style={{ height: '20px', display: 'inline', margin: '2px 2px', position: 'relative', top: '15px' }} \n              />\n              <table style={{marginLeft: '31px', position: 'relative', top: '-10px'}}>\n                <tbody>\n                  <tr style={{backgroundColor: '#97d99f', borderBottom: 'thick solid red'}}>\n                    <td>{today}</td>\n                    <td>{ selectedPark.Time[today] }</td>\n                  </tr>\n                  <tr style={{color: 'grey'}}>\n                    <td>Sunday</td>\n                    <td>{ selectedPark.Time.Sunday }</td>\n                  </tr>\n                  <tr style={{color: 'grey'}}>\n                    <td>Monday</td>\n                    <td>{ selectedPark.Time.Monday }</td>\n                  </tr>\n                  <tr style={{color: 'grey'}}>\n                    <td>Tuesday</td>\n                    <td>{ selectedPark.Time.Tuesday }</td>\n                  </tr>\n                  <tr style={{color: 'grey'}}>\n                    <td>Wednesday</td>\n                    <td>{ selectedPark.Time.Wednesday }</td>\n                  </tr>\n                  <tr style={{color: 'grey'}}>\n                    <td>Thursday</td>\n                    <td>{ selectedPark.Time.Thursday }</td>\n                  </tr>\n                  <tr style={{color: 'grey'}}>\n                    <td>Friday</td>\n                    <td>{ selectedPark.Time.Friday }</td>\n                  </tr>\n                  <tr style={{color: 'grey'}}>\n                    <td>Saturday</td>\n                    <td>{ selectedPark.Time.Saturday }</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          \n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nfunction App() {\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      <WrappedMap \n        googleMapURL={'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBLUVxQKbhvQSvDVMGrlyTmkLKOIxn5Ws0'} loadingElement={<div style={{ height: '100%' }} />} containerElement={<div style={{ height: '100%' }} />} mapElement={<div style={{ height: '100%' }} />} \n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}